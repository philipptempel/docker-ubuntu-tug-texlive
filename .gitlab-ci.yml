stages:
  - build
  - push


.docker:
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

.docker-push:
  extends: .docker
  stage: push
  after_script:
    - docker push "$CI_REGISTRY_IMAGE:$TEXLIVE_YEAR-$TEXLIVE_SCHEME"

.docker-build:
  extends: .docker
  stage: build
  after_script:
    - |
      docker build
      --tag "$CI_REGISTRY_IMAGE:$TEXLIVE_YEAR-$TEXLIVE_SCHEME"
      --file "$TEXLIVE_YEAR/$TEXLIVE_SCHEME/Dockerfile"
      $TEXLIVE_YEAR/$TEXLIVE_SCHEME/


infraonly-build:
  extends: .docker-build
  script:
    - export TEXLIVE_SCHEME="infraonly"

minimal-build:
  extends: .docker-build
  needs:
    - infraonly-build
  script:
    - export TEXLIVE_SCHEME="minimal"

basic-build:
  extends: .docker-build
  needs:
    - minimal-build
  script:
    - export TEXLIVE_SCHEME="basic"

small-build:
  extends: .docker-build
  needs:
    - basic-build
  script:
    - export TEXLIVE_SCHEME="small"

medium-build:
  extends: .docker-build
  needs:
    - small-build
  script:
    - export TEXLIVE_SCHEME="medium"

full-build:
  extends: .docker-build
  needs:
    - medium-build
  script:
    - export TEXLIVE_SCHEME="full"


infraonly-push:
  extends: .docker-push
  script:
    - export TEXLIVE_SCHEME="infraonly"

minimal-push:
  extends: .docker-push
  needs:
    - infraonly-push
  script:
    - export TEXLIVE_SCHEME="minimal"

basic-push:
  extends: .docker-push
  needs:
    - minimal-push
  script:
    - export TEXLIVE_SCHEME="basic"

small-push:
  extends: .docker-push
  needs:
    - basic-push
  script:
    - export TEXLIVE_SCHEME="small"

medium-push:
  extends: .docker-push
  needs:
    - small-push
  script:
    - export TEXLIVE_SCHEME="medium"

full-push:
  extends: .docker-push
  needs:
    - medium-push
  script:
    - export TEXLIVE_SCHEME="full"
  after_scriot:
    - docker push "$CI_REGISTRY_IMAGE:$TEXLIVE_YEAR-$TEXLIVE_SCHEME"
